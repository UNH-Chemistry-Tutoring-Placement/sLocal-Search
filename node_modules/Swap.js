module.exports = Swap;

var grader = require('Grade'),
    rand = require('randomAssignment'),
    printOut = require('FileData').out,
    data = require('FileData').get();

function Swap(){
	
    
    var results = [],
        timeStart = new Date().getTime();
        timeUp = isNaN(Number(process.argv[2])) ? 1000 : Number(process.argv[2]) * 1000;
    
    while((new Date().getTime() - timeStart) < timeUp){
        var random = rand();

        //single swap until we go through and don't swap once
        do {
            var swapped = false;
            
            for (var time in random){

                //grade this time before any changes
                var beforePenalty1 = grader.grade(time, random[time]);

                for (var student of random[time]){

                    var afterPenalty1 = grader.gradeWithout(time, random[time], student);
                    
                    //difference
                    var diff1 = beforePenalty1 - afterPenalty1;
                    
                    //go through the good and possible time
                    var allTimes = data.student.students[student].goodTimes.concat(data.student.students[student].possibleTimes);
                    
                    for (var time2 of allTimes){
                        
                        if (time2 === time) continue; //ignore same time slot
                        
                        //if the student has a timeslot that isn't in the group slots
                        if (typeof random[time2] === 'undefined')
                            continue;
                        
                        var beforePenalty2 = grader.grade(time2, random[time2]);
                        var afterPenalty2 = grader.gradeWith(time2, random[time2], student);
                        var diff2 = beforePenalty2 - afterPenalty2;

                        var totalDiff = diff2 + diff1;

                        if (totalDiff > 0){
                            swapped = true;
                            random[time].splice(random[time].indexOf(student), 1);
                            random[time2].push(student);
                            //grader.gradeTotal();
                            break;
                        }
                    }
                }
            }
        } while(swapped);
    
        
        //double swap!!
        do {
            var swapped = false;
            
            for (var time in random){

                for (var student of random[time]){
                    
                    //now we need to go through all the time slots for this student, and see if there are students who can 
                    //switch with us.
                    for (var time2 in random){
                        
                        //need this variable so we can break out of this second for loop when we swap
                        var studentAlreadySwapped = false;
                        
                        //skip first time slot time
                        if (time === time2) continue;
                        
                        //is time2 a good/possible time for the student?
                        if (data.student.students[student].goodTimes.indexOf(time2) > -1 ||
                            data.student.students[student].possibleTimes.indexOf(time2) > -1 ){
                            
                            // lets see if this student can move to this time slot.
                            // are there any students in this time slot that can move?
                            
                            for (var student2 of random[time2]){
                                
                                // try to swap if time1 is a good/possible time for this student2
                                if (data.student.students[student2].goodTimes.indexOf(time) > -1 ||
                                    data.student.students[student2].possibleTimes.indexOf(time) > -1 ){
                                    
                                    //lets see if it's a good idea to swap.
                                    var gradeTime1Before = grader.grade(time, random[time]);
                                    var gradeTime1After = grader.gradeSwap(time, random[time], student2, student);
                                    var diff1 = gradeTime1Before - gradeTime1After;
                                    
                                    var gradeTime2Before = grader.grade(time2, random[time2]);
                                    var gradeTime2After = grader.gradeSwap(time2, random[time2], student, student2);
                                    var diff2 = gradeTime2Before - gradeTime2After;
                                    
                                    if (diff1 + diff2 > 0){
                                        
                                        // it's adventagous to make this swap
                                        
                                        var studIndex = random[time].indexOf(student);
                                        random[time].splice(studIndex, 1);
                                        
                                        //remove student 2 from time 2
                                        
                                        var stud2Index = random[time2].indexOf(student2);
                                        random[time2].splice(stud2Index, 1);
                                        
                                        //place student 2 in time 1
                                        random[time].splice(studIndex, 0 , student2);
                                        
                                        //place student 1 in time 2
                                        random[time2].splice(stud2Index, 0, student);
                                        
                                        swapped = true;
                                        studentAlreadySwapped = true;
                                        //console.log("DOUBLE SWAPPING");
                                    
                                    }
                                }
                            }
                        }
                        
                        //if we already swapped student1, stop looking for places to swap!
                        if (studentAlreadySwapped)
                            break;
                        
                    }
                }
            }
        } while(swapped);
        
        //save the grade of this solution and save it
        var grade = grader.gradeTotal(random);
        if (typeof results[grade] === 'undefined')
            results[grade] = random;
        
    }
    
    for (var result in results){
        //best solution
        console.log("the score was", result, results[result]);
        printOut(result, results[result]);
        break;
    }

}



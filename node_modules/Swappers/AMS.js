module.exports = AMS;

var swap = require('Swappers/CoreFunctions').both,
    randAssign = require('randomAssignment'),
    data = require('FileData').get(),
    grader = require('Grade'),
    yargs = require('Yargs');

var nInit = 10,
    nSample = 4,
    nRandom = 2;
    

function AMS(){
    
    // first thing we're going to do is run our regular sort twenty times
    var results = [];
    
    process.stdout.write("Begining with " + nInit + " solutions: ");
    
    for (var i = 1; i <= nInit; i++){ 
        
        results.push( swap( randAssign() ) );
        process.stdout.write(i + ", ");
        
    }

    // set up our time variables
    var timeStart = new Date().getTime(),
        timeUp = yargs.time;
    
    while((new Date().getTime() - timeStart) < timeUp){
        
        // find the top 20 best results
        results = top(results);
        
        process.stdout.write("Top " + nSample + " Results: ");
        for (var result of results)
            process.stdout.write(result.grade + ", ");
        console.log();
        
        // new solutions
        var newResults = [];
        
        for (var i = 0; i < 5; i++){
            
            // build a new assignment based on the top 20 results
            var assignment = {};
            
            // build random data
            var random = [];
            for (var r = 0; r < nRandom; r++)
                random.push(randAssign());

            // initialize the group times
            for (var groupTime in data.class.groups)
                assignment[groupTime] = [];

            for (var studEmail in data.student.students){
                var time = assignIndividual(studEmail, results, random);
                assignment[ time ].push( studEmail );
            }

            // swap on this assignment and push the result on our results stack
            console.log("before ", grader.gradeTotal(assignment));
            var result = swap(assignment)
            console.log("After", result.grade);
            newResults.push( result );
            
        }
        
        results = results.concat(newResults);
            
        
    }
    
    results = top(results)
    
    return results[0];
}

//returns top 20 assignments by grade
function top(results){
    results.sort(function(a,b){return a.grade - b.grade});
    return results.slice(0, nSample);
}

//take student and pick one of their five assigned times -Think it might be missing some students-

function assignIndividual(student, bestSoFar, randomPlacements){
    var randNum = randNumber(0, nSample + nRandom);
    
    var randAssign = randNum < nSample ? bestSoFar[ randNum ].assignments : randomPlacements[ randNum - nSample ];
    
    if (!randAssign) console.error("rand assign is undefiend");
    
    for(var time in randAssign){
        
        if (randAssign[time].indexOf(student) > -1)
            return time;
        
    }
    
    console.error("Student", student, "Doesn't have time!");
    
}

function randNumber(min,max){
    return Math.floor(Math.random() * (max-min) + min);
}
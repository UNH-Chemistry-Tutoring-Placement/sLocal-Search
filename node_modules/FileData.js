/**
 * Use to Extract data from input files
 * @type {{load: Load, get: Get, out: Out}}
 */
module.exports = {
    load: Load,
    get: Get,
    out: Out
};

var fs = require('fs'),
	Parser = require('Parser'),
    FileParsers = require('FileParsers'),
    yargs = require('Yargs');

var data = {};

function Load(cb){
    
    
    var _in = ""; //note that 'in' is a reserved keyword
    
    process.stdin.setEncoding('utf8');
    process.stdin.on('data', function(chunk){
        _in += chunk;
    });
    
    process.stdin.on('end', function(){
        
        var p = new Parser(_in);
        
        for (var i = 0; i < 4; i ++){
        
            var line = p.getLine();
            
            if (line == null) break;
            
            else if (line.indexOf('Student Info Format') >= 0)
                data.student = FileParsers.student(p);
            else if (line.indexOf('Objective Function Format') >= 0)
                data.objective = FileParsers.objective(p);
            else if (line.indexOf('Class Info Format') >= 0)
                data.class = FileParsers.class(p);
            else if (line.indexOf('Solution Format') >= 0)
                data.assignment = FileParsers.assignment(p);
        
        }
        
        cb();
        
    });
    
}

function Get() { return data; }

function Out(grade, times){
    var out = "";
    
    out += "Solution Format: 2\n";
    out += "Objective Function: STUFF\n";
    out += "Class Info: STUFF\n";
    out += "Student Info: STUFF\n";
    out += "Number of students: " + data.student.numStudent + "\n";
    
    for (var time in times){
        for (var i = 0; i < times[time].length; i++){
            var studentEmail = times[time][i];
            out += "# ------------------------ \n";
            out += "# Student: " + data.student.students[studentEmail].name + "\n";
            out += data.student.students[studentEmail].email + "\n";
            out += time + "\n";
            out += "# TA Name: " + data.class.groups[time].name + "\n";
            out += data.class.groups[time].email + "\n";
        }
    }
    out += "Solution cost: " + grade;
    
    fs.writeFileSync(process.argv[3] || 'solution', out);
}


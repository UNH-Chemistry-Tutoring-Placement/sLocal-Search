/**
 * Created by jeep on 10/28/15.
 */
module.exports = randomAssignment;

var data = require('FileData').get();

function randomAssignment(){
    var assignment = {};
    var times = [];
        
    for(var time in data.class.groups){
        assignment[time] = [];
        times.push(time);
    }

    var maxGroupSize = Math.ceil(data.student.numStudent/(times.length+1));

    /*Try students possible times first, if no possible times are
     *valid time try the students goodTimes, if no goodTimes are
     * valid times, just assign the student to a random slot.
     */
    for(var studEmail in data.student.students) {
        var possibleTimes = data.student.students[studEmail].possibleTimes
        var actualPossibleTimes = []
        for (i = 0; i < possibleTimes.length; i++) {
            if(assignment[possibleTimes[i]] != undefined){
                actualPossibleTimes.push(possibleTimes[i])
            }
        }
        if(actualPossibleTimes.length == 0){
            var goodTimes = data.student.students[studEmail].goodTimes
            var possibleGoodTimes = []
            for(i-0;i<goodTimes.length;i++){
                if(assignment[goodTimes[i]] != undefined){
                    possibleGoodTimes.push(goodTimes[i]);
                }
            }
            if(possibleGoodTimes.length == 0){
                var ran = randNumber(0,times.length)
                assignment[times[ran]].push(studEmail)
            }else{
                var ran = randNumber(0,goodTimes.length)
                assignment[goodTimes[ran]].push(studEmail)
            }
        }else {
            var ran = randNumber(0, actualPossibleTimes.length);
            assignment[actualPossibleTimes[ran]].push(studEmail)
        }

    }
    return assignment;
}

function randNumber(min,max){
    return Math.floor(Math.random() * (max-min) + min);
}
